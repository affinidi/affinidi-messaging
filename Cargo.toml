[workspace]
members = [
    "affinidi-messaging-didcomm",
    "affinidi-messaging-sdk",
    "affinidi-messaging-mediator",
    "affinidi-messaging-mediator/affinidi-messaging-mediator-common",
    "affinidi-messaging-mediator/affinidi-messaging-mediator-processors",
    "affinidi-messaging-helpers",
    "affinidi-messaging-text-client",
]
resolver = "3"

[workspace.package]
version = '0.10.0'
edition = "2024"
authors = ["Glenn Gore <glenn@affinidi.com>"]
description = "Affinidi Messaging"
readme = "README.md"
homepage = "https://affinidi.com/"
keywords = ["did", "ssi", "ATM", "affinidi"]
publish = true
license = "Apache-2.0"
repository = "https://github.com/affinidi/affinidi-messaging"
rust-version = "1.85"

[workspace.dependencies]
affinidi-tdk = { version = "0.1", path = "../affinidi-tdk-rs/affinidi-tdk" }
affinidi-tdk-common = { version = "0.1", path = "../affinidi-tdk-rs/affinidi-tdk-common" }
affinidi-secrets-resolver = { version = "0.1", path = "../affinidi-tdk-rs/affinidi-tdk-common/affinidi-secrets-resolver" }
affinidi-messaging-sdk = { version = "0.10.0", path = "./affinidi-messaging-sdk" }
affinidi-messaging-didcomm = { version = "0.10.0", path = "./affinidi-messaging-didcomm" }
affinidi-messaging-mediator = { version = "0.10.0", path = "./affinidi-messaging-mediator" }
affinidi-messaging-mediator-processors = { version = "0.10.0", path = "./affinidi-messaging-mediator/affinidi-messaging-mediator-processors" }
affinidi-messaging-mediator-common = { version = "0.10.0", path = "./affinidi-messaging-mediator/affinidi-messaging-mediator-common" }
affinidi-did-resolver-cache-sdk = { version = "~0.4", features = ["network"] }
anyhow = '1.0'
askar-crypto = "0.3.3"
async-convert = "1"
aws-config = "1.6"
aws-sdk-dynamodb = "1.68"
aws-sdk-memorydb = "1.64"
aws-sdk-secretsmanager = "1.66"
aws-sdk-ssm = "1.68"
axum = { version = "0.8", features = ["ws"] }
axum-extra = { version = "0.10", features = ["typed-header"] }
axum-server = { version = "0.7", features = ["tls-rustls"] }
base64 = "0.22"
bs58 = "0.5"
chrono = "0.4"
circular-queue = { version = "0.2", features = ["serde_support"] }
clap = { version = "4.5", features = ["derive"] }
color-eyre = "0.6"
console = "0.15"
criterion = "0.5"
crossterm = { version = "0.28", features = ["event-stream"] }
dialoguer = "0.11"
did-peer = { version = "0.4" }
futures-util = "0.3"
hostname = "0.4"
http = "1"
image = "0.25.5"
itertools = "0.14"
jsonwebtoken = "9.3"
lazy_static = "1.5"
log = "0.4"
num-format = "0.4.4"
qrcode = "0.14"
rand = "0.9"
ratatui = "0.29"
ratatui-image = { version = "5", features = ["crossterm", "image-defaults"] }
rcgen = { version = "0.13", default-features = false, features = [
    "aws_lc_rs",
    "pem",
] }
# Redis can only be updated when deadpool-redis supports the new version
redis = { version = "0.29", features = [
    "tokio-rustls-comp",
    "tls-rustls-insecure",
] }
deadpool-redis = { version = "0.20", features = ["rt_tokio_1"] }
regex = "1.11"
reqwest = { version = "0.12", features = ["rustls-tls-manual-roots", "json"] }
ring = { version = "0.17", features = ["std"] }
rustls = { version = "0.23", default-features = false, features = [
    "aws_lc_rs",
    "tls12",
] }
rustls-pemfile = "2"
rustls-platform-verifier = "0.5"
semver = "1.0"
serde = { version = "1.0", features = ["derive", "rc"] }
serde-enum-str = '0.4'
serde_json = "1.0"
sha1 = "0.10"
sha2 = "0.10"
sha256 = "1.6"
ssi = { version = "0.10" }
textwrap = "0.16"
thiserror = "2.0"
time = "0.3"
tokio = { version = "1.44", features = ["full"] }
tokio-rustls = "0.26"
tokio-stream = "0.1"
toml = "0.8"
tower-http = { version = "0.6", features = ["cors", "trace", "limit"] }
tracing = { version = "0.1", features = [
    "max_level_debug",
    "release_max_level_info",
] }
tracing-subscriber = { version = "0.3", features = [
    "env-filter",
    "fmt",
    "json",
] }
tracing-test = "0.2"
tui-input = "0.11.0"
tui-logger = { version = "0.17", features = ["tracing-support"] }
url = "2.5"
uuid = { version = "1.15", features = ["v4", "fast-rng"] }
varint = "0.9"
web-socket = "0.7"
